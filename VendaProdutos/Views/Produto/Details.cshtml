@model ProdutoListViewModel

<div class="mt-50 container_produto">
    <div class="container">
        <div class="row container_produto">
            <div class="col-md-6 galeria_produto">
 
                <div class="">
                    <div style="
              "
                         class="swiper mySwiper2">
                        <div class="swiper-wrapper">
                            @if (!string.IsNullOrEmpty(Model.Produto.ImagemUrl))
                            {
                            <div class="swiper-slide">
                                <img onload="obterAlturaLargura(this)" class="img-fluid"
                                     width="345"
                                     height="352"
                                     alt="1ª foto  da cesta"
                                      src="@Model.Produto.ImagemUrl" />
                            </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.Produto.Imagem2CarolselURL))
                            {
                                <div class="swiper-slide">
                                    <img onload="obterAlturaLargura(this)" class="img-fluid"
                                     width="345"
                                     height="352"
                                     alt="2ª foto  da cesta"
                                     src="@Model.Produto.Imagem2CarolselURL"  loading="lazy" decoding="async"/>
                            </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.Produto.Imagem3CarolselURL))
                            {
                                <div class="swiper-slide">
                                    <img onload="obterAlturaLargura(this)" class="img-fluid"
                                    width="345"
                                    height="352"
                                    alt="3ª foto  da cesta"
                                    src="@Model.Produto.Imagem3CarolselURL"  loading="lazy" decoding="async"/>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.Produto.Imagem4CarolselURL))
                            {

                                <div class="swiper-slide">

                                    <video id="video2" class="onb-embed-responsive-item" controls autoplay muted>
                                            <source src="@Model.Produto.Imagem4CarolselURL" type="video/mp4">
                                            Seu navagador não suporta esse formato de vídeo.
                                        </video>
                                 </div>

                            }

                        </div>
                        <div class="swiper-button-next"></div>
                        <div class="swiper-button-prev"></div>
                    </div>
                    <div thumbsSlider="" class="swiper mySwiper">
                        <div class="swiper-wrapper">
                            @if (!string.IsNullOrEmpty(Model.Produto.ImagemUrl))
                            {
                            <div class="swiper-slide">
                                
                                <img onload="obterAlturaLargura(this)" class="img-fluid"
                                     width="74"
                                     height="75"
                                     alt="1ª miniatura da cesta"
                                     src="@Model.Produto.ImagemUrl"  loading="lazy" decoding="async"/>
                            </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.Produto.Imagem2CarolselURL))
                            {
                                <div class="swiper-slide">
                                    <img onload="obterAlturaLargura(this)" class="img-fluid"
                                    width="74"
                                    height="75"
                                    alt="2ª miniatura da cesta"
                                    src="@Model.Produto.Imagem2CarolselURL"  loading="lazy" decoding="async"/>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.Produto.Imagem3CarolselURL))
                            {
                                <div class="swiper-slide">
                                    <img onload="obterAlturaLargura(this)" class="img-fluid"
                                    width="74"
                                    height="75"
                                    alt="3ª miniatura da cesta"
                                    src="@Model.Produto.Imagem3CarolselURL"  loading="lazy" decoding="async"/>
                                </div>
                            }
                            @if (!string.IsNullOrEmpty(Model.Produto.Imagem4CarolselURL))
                            {
                                <div class="swiper-slide">
                                    <img onload="obterAlturaLargura(this)" class="img-fluid"
                                         width="74"
                                         height="75"
                                         alt="1ª miniatura da cesta"
                                         src="@Model.Produto.ImagemUrl"  loading="lazy" decoding="async"/>
                                </div>
                            }
                        </div>
                    </div>
                </div>

            </div>

            <div class="col-md-6">
                <h1 class="mt-30-xs">
                    @Model.Produto.Categoria.NomeCurto  <span>@Model.Produto.Nome
                    </span>
                    <div style="font-weight: 800">
                        Apenas em <span style="color: #fd4800;">Feira de Santana</span>
                    </div>
                </h1>
                <div class="mt-20 descri"><b>Descrição:</b>Com @Model.Produto.QuantidadeDeItem itens, @Model.Produto.DescricaoCurta ... <a class="maisdetalhes" href="#descricao-completa" id="escorrega_na_tela">Continue lendo</a> </div>


                <div class="envolve_star d-none-xs  d-none-sm">
                    <ul class="star mt-30">
                        <li>★</li>
                        <li>★</li>
                        <li>★</li>
                        <li>★</li>
                        <li>★</li>
                    </ul>
                </div>
            

                <small>
                    <div class="de mt-50-xs"> De: R$&nbsp;@Model.Produto.Preco</div>
                    R$ <span id="preco_super_top">@Model.Produto.PrecoPromocional</span> <!-- problema é aqui -->
                    @if (@Model.Produto.Parcela > 0)
                    {
                    <div class="parcelado">
                        12x no cartão de crédito <br />(dividindo até 3x não tem juros)
                    </div>
                    }
                    @if (@Model.Produto.TaxaDeEntrega == 0)
                    {
                        <div class="parcela ">Entrega grátis em Feira de Santana</div>
                        <div class="mb-90-xs" style="
    font-size: 15px;
    font-weight: 400;
    ">
                            (Dentro do anel de contorno)
                        </div>
                    }
                </small>


                @if (Model.Produto.OpcaoExtra)
                {
                    <p class="mt-10">Esse produto é vendido como opção extra, selecione um de nossos produto para que possa comprar também esse item</p>

                    <a class="btn btn-primary pt-10 pb-10 pr-40 pl-40 mt-10 mr-auto-xs ml-auto-xs d-block-xs" style="background-color:#007bff" asp-controller="Produto" asp-action="List">Selecionar mais Produtos</a>

                }
                else
                {
                    <div class="product-addon product-addon-ExtraToppings checkbox mt-50">
                   
                        <h2 class="addon-name">Adicione opções extras</h2>
                        <div class="scrool_opcoes_extra">
                    @foreach (var opcoesExtra in Model.OpcoesExtra)
                    {
                        @if (opcoesExtra.ProdutoId != Model.Produto.ProdutoId)
                        {
                            // Seu código aqui
                                                <div class="form-row">
                        <div class="opcao_extra" id="minhaDiv" data-toggle="modal" data-target="#modal-@opcoesExtra.ProdutoId">
                                    <img src="@opcoesExtra.ImagemThumbnailUrl" width="43px" height="43px"  class="lafka-addon-image-icon" alt=""  loading="lazy" decoding="async">
                            <div class="envolve_opcoes">
                                @{
                                    int parteInteiraPrecoPromocional = (int)opcoesExtra.PrecoPromocional;
                                }
                                        @opcoesExtra.Categoria.NomeCurto @opcoesExtra.Nome (@(parteInteiraPrecoPromocional == 0 ? "GRÁTIS" : $"R$ {parteInteiraPrecoPromocional}"))
                                        <button id="adicionar_@opcoesExtra.ProdutoId" class="btn btn-primary btn-sm" onclick="adicionaNaListaDeCompra(@opcoesExtra.ProdutoId, @opcoesExtra.PrecoPromocional)">Adicionar</button>
                                    <button id="remover_@opcoesExtra.ProdutoId" class="btn btn-danger" onclick="removeDaListaDeCompra(@opcoesExtra.ProdutoId, @opcoesExtra.PrecoPromocional)" style="display: none;">Remover</button>

                                </div>
                         </div>
                        </div>



                            <!-- Modal -->
                            <div class="modal" id="modal-@opcoesExtra.ProdutoId">
                                <div class="modal-dialog">
                                    <div class="modal-content">

                                        <!-- Cabeçalho do Modal -->
                                        <div class="modal-header">
                                            <h4 class="modal-title"> @opcoesExtra.Categoria.NomeCurto @opcoesExtra.Nome</h4>
                                            <button type="button" class="close" data-dismiss="modal">&times;</button>
                                        </div>

                                        <!-- Corpo do Modal -->
                                        <div class="modal-body">
                                            <img  class="img-fluid"  src="@opcoesExtra.ImagemUrl" alt="Imagem Modal"  decoding="async">
                                        </div>
                                        <!-- Rodapé do Modal -->
                                        <div class="modal-footer">
                                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Fechar</button>
                                        </div>

                                    </div>
                                </div>
                            </div>

                        }

                    }

                        <div class="clear"></div>
                    </div>
                    <button id="expandirOpcoes" class="btn btn-sm btn-secondary" onclick="adicionarAlturaAuto()" style="margin: auto;display: block;width:100%">Expandir opções extras</button>
                                        <button id="encolherOpcoes" class="btn btn-sm btn-default" onclick="removerAlturaAuto()" style="margin: auto;display: none;width:100%">Encolher opções extras</button>


 <script>
  function adicionarAlturaAuto() {
      var encolherOpcoes = document.getElementById("encolherOpcoes")
      var expandirOpcoes = document.getElementById("expandirOpcoes")
    var opcaoExtra = document.querySelector(".scrool_opcoes_extra");
    opcaoExtra.style.height = "auto";
      expandirOpcoes.style.display = "none";
      encolherOpcoes.style.display = "block";
  }
    function removerAlturaAuto() {
              var encolherOpcoes = document.getElementById("encolherOpcoes")

      var expandirOpcoes = document.getElementById("expandirOpcoes")
    var opcaoExtra = document.querySelector(".scrool_opcoes_extra");
    opcaoExtra.style.height = "218px";
      expandirOpcoes.style.display = "block";
      encolherOpcoes.style.display = "none";
  }
</script>
                    </div>
                

                <div id="valores_totais" class="mt-20" style="display:none;">
                    <dl class="product-addon-totals">
                        <dt>Adições extra:</dt>
                        <dd>
                            <strong>
                                <span id="adicoes_extra" class="amount"><span id="valor_inicial">0,00</span></span>
                            </strong>
                        </dd>
                        <dt>Valor total:</dt>
                        <dd>
                            <strong>
                                <span id="valor_total" class="amount"><span id="valor_inicial">@Model.Produto.PrecoPromocional.ToString("F2", new System.Globalization.CultureInfo("pt-BR"))</span></span>
                            </strong>
                        </dd>
                    </dl>
                </div>




 

                    <a class="pt-10 pb-10 pr-40 pl-40 mt-10 mr-auto-xs ml-auto-xs d-block-xs" id="botao_comprar" onclick="compraProdutosDaLista()">Encomendar agora</a>
                    <!--SVG ANIMATED LOAD-->
                    <div id="animated_load" style="display:none"> 
<?xml version="1.0" encoding="utf-8"?>
<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" style="margin: auto; background: rgb(255, 255, 255); display: block; shape-rendering: auto;" width="200px" height="200px" viewBox="0 0 100 100" preserveAspectRatio="xMidYMid">
<g transform="rotate(0 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#00a650">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.9166666666666666s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(30 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#00a650">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.8333333333333334s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(60 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#00a650">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.75s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(90 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#00a650">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.6666666666666666s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(120 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#00a650">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.5833333333333334s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(150 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#00a650">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.5s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(180 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#00a650">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.4166666666666667s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(210 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#00a650">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.3333333333333333s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(240 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#00a650">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.25s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(270 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#00a650">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.16666666666666666s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(300 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#00a650">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="-0.08333333333333333s" repeatCount="indefinite"></animate>
  </rect>
</g><g transform="rotate(330 50 50)">
  <rect x="47" y="24" rx="3" ry="6" width="6" height="12" fill="#00a650">
    <animate attributeName="opacity" values="1;0" keyTimes="0;1" dur="1s" begin="0s" repeatCount="indefinite"></animate>
  </rect>
</g>
 </svg>
 </div>
                    }

 

            </div>


        </div>
    </div>
</div>

<section class="descricao pt-50 pb-50 mt-50 ">

    <div id="descricao-completa" class="tit_descri mb-40 mb-10-xs">

        <div class="container">
            <div class="row">
                <div class="col-md-12">
                    <h2 class="mt-25">Descrição completa</h2>

                </div>
            </div>
        </div>
    </div>


    <div class="container">
        <div class="row">
            <div class="col-md-12">


                <p class="mt-20">@Html.Raw(@Model.Produto.DescricaoDetalhada)</p>
                

            </div>
        </div>
    </div>
</section>




@{
    bool exibeProdutosRelacionados = false;
    @foreach (var categoria in Model.Categorias){
    @if (categoria.CategoriaId == @Model.Produto.Categoria.CategoriaId)
        {

    @foreach (var produto in categoria.Produtos)
            {
    @if (produto.ProdutoId != @Model.Produto.ProdutoId)
                {
                    exibeProdutosRelacionados = true;
                }

    }
        }
    }
}

@if(exibeProdutosRelacionados){
    <section class="detalhes_produto produtos categorias">
    <div class="container">
        <div class="row">
            <div class="col-12">
                <h3 class="mb-60 mt-100 mb-40-xs mt-100-xs">
                    <span>Mais @Model.Produto.Categoria.CategoriaNome</span> para escolher
                </h3>
            </div>
        </div>

        <div id="produtos" class="row">
            @foreach (var categoria in Model.Categorias)
                    {

                @if (categoria.CategoriaId == @Model.Produto.Categoria.CategoriaId){
                @foreach (var produto in categoria.Produtos)
                {

                    @if (produto.ProdutoId != @Model.Produto.ProdutoId)
                    {
                            <partial name="_ProdutosResumo" for="@produto" />

                    }
                }
            }

                    
                    }
                    </div>
    </div>
</section>
}



<partial name="_Faq" />










 



<script src="https://code.jquery.com/jquery-3.6.4.min.js" integrity="sha256-oP6HI/t1qEzB53L0R6JLY2zkiq0I6a0+PRAkFO9uqrs=" crossorigin="anonymous"></script>
 

<script>
    // Array para armazenar os IDs dos produtos selecionados
    var listaDeCompra = ['@Model.Produto.ProdutoId'];
    var totalAdicoesExtras = 0
    var precoProdutoAtual = 0
    precoProdutoAtual = parseFloat("@Model.Produto.PrecoPromocional".replace(",", "."))
    var previsaoTotaldoValorDoPedido = 0

    // Função para adicionar um produto à lista
    function adicionaNaListaDeCompra(produtoId, precoPromocional) {
        console.log('precoProdutoAtual', precoProdutoAtual)
        if (!listaDeCompra.includes(produtoId)) {
            listaDeCompra.push(produtoId);
            atualizaBotoes(produtoId, true);

            totalAdicoesExtras += parseFloat(precoPromocional)
            previsaoTotaldoValorDoPedido = totalAdicoesExtras + parseFloat(precoProdutoAtual)
                atualizaTotalAdicoesExtras()

        }

        var valores_totais = $(`#valores_totais`);
        valores_totais.show();

    }

    // Função para remover um produto da lista
    function removeDaListaDeCompra(produtoId, precoPromocional) {
        if (listaDeCompra.includes(produtoId)) {
            var index = listaDeCompra.indexOf(produtoId);
            listaDeCompra.splice(index, 1);
            atualizaBotoes(produtoId, false);

            totalAdicoesExtras -= parseFloat(precoPromocional)
            previsaoTotaldoValorDoPedido = totalAdicoesExtras + parseFloat(precoProdutoAtual)

            atualizaTotalAdicoesExtras()
        }


    }

    function atualizaTotalAdicoesExtras() {
        $("#adicoes_extra").text("R$ " + totalAdicoesExtras.toFixed(2));
        $("#valor_total").text("R$ " + previsaoTotaldoValorDoPedido.toFixed(2));

        var valores_totais = $(`#valores_totais`);
        var tagValor_inicial = $(`#valor_inicial`);
        if (totalAdicoesExtras > 0) {
            tagValor_inicial.hide();
        } else {
            tagValor_inicial.show();
            valores_totais.hide();
        }
    }


    // Função para atualizar a visibilidade dos botões
    function atualizaBotoes(produtoId, adicionado) {
        var botaoAdicionar = $(`#adicionar_${produtoId}`);
        var botaoRemover = $(`#remover_${produtoId}`);

        if (adicionado) {
            botaoAdicionar.hide();
            botaoRemover.show();
        } else {
            botaoAdicionar.show();
            botaoRemover.hide();
        }
    }

    // Função para comprar os produtos da lista
    function compraProdutosDaLista() {
        var valores_totais = $(`#valores_totais`);
    
        valores_totais.hide();
        
        if (listaDeCompra.length > 0) {
            // Iterar sobre cada ID na lista de compra
            listaDeCompra.forEach(function (produtoId) {
                $.ajax({
                    url: '/CarrinhoCompra/AdicionarItemNoCarrinhoCompraAjax',
                    type: 'POST',
                    data: { produtoId: produtoId },
                    success: function () {
                        // Remover o produto da lista após a compra bem-sucedida (opcional)
                        removeDaListaDeCompra(produtoId);

                        // Se todos os produtos foram processados, redirecionar para a página do carrinho
                        if (listaDeCompra.length === 0) {
                            window.location.href = '/CarrinhoCompra';
                        }
                    },
                    error: function () {
                        alert('Erro ao processar a compra.');
                    }
                });
            });
        } else {
            alert('Adicione produtos à lista antes de comprar.');
        }
        var botao_comprar = $(`#botao_comprar`);
        var opcoes_extras = $(`.product-addon`);
 
        botao_comprar.hide();
        opcoes_extras.hide();

var animated_load = document.getElementById("animated_load");
animated_load.style.display = "block";    }
</script>



 







<script src="https://cdn.jsdelivr.net/npm/swiper@9/swiper-bundle.min.js"></script>

@* <script>
    var swiper = new Swiper(".mySwiper", {
        loop: true,
        spaceBetween: 10,
        slidesPerView: 4,
        freeMode: true,
        watchSlidesProgress: true,      
    });
    var swiper2 = new Swiper(".mySwiper2", {
        loop: true,
        spaceBetween: 10,
        navigation: {
            nextEl: ".swiper-button-next",
            prevEl: ".swiper-button-prev",
        },
        thumbs: {
            swiper: swiper,
        },
        callback: function (index, element) {
            // Pausa o vídeo ao navegar para outro slide
            var currentVideo = document.getElementById('video' + (index + 1));
            var allVideos = document.querySelectorAll('video');

            allVideos.forEach(function (video) {
                if (video !== currentVideo) {
                    video.pause();
                }
            });
        }
    });
</script>
 *@


<script>
    document.addEventListener("DOMContentLoaded", function () {
        var swiper = new Swiper(".mySwiper", {
            loop: true,
            spaceBetween: 10,
            slidesPerView: 4,
            freeMode: true,
            watchSlidesProgress: true,
        });

        var swiper2 = new Swiper(".mySwiper2", {
            loop: true,
            spaceBetween: 10,
            navigation: {
                nextEl: ".swiper-button-next",
                prevEl: ".swiper-button-prev",
            },
            thumbs: {
                swiper: swiper,
            },
        });
    });
</script>


<script>
    // Espera até que o DOM esteja carregado
    document.addEventListener("DOMContentLoaded", function () {
        // Percorre todas as imagens e adiciona um ouvinte de evento 'load'
        var imagens = document.querySelectorAll('.opcao_extra img');
        imagens.forEach(function (imagem) {
            imagem.addEventListener('load', function () {
                obterAlturaLargura(imagem);
            });
        });
    });

    function obterAlturaLargura(imagem) {
        // Obter altura e largura renderizadas da imagem
        var alturaRenderizada = imagem.clientHeight;
        var larguraRenderizada = imagem.clientWidth;

        // Adicionar os atributos height e width à imagem
        imagem.setAttribute('height', alturaRenderizada);
        imagem.setAttribute('width', larguraRenderizada);

        console.log('Altura renderizada: ' + alturaRenderizada + ' pixels');
        console.log('Largura renderizada: ' + larguraRenderizada + ' pixels');
    }
</script>


        <script>
    document.addEventListener("DOMContentLoaded", function () {

    var imagem = document.querySelector(".swiper-slide img");
    var video = document.getElementById("video2");

    if (imagem && video) {
        // Obter a largura da primeira imagem
        var larguraImagem = imagem.clientWidth;

        // Definir a largura do vídeo igual à largura da imagem
        video.setAttribute('width', larguraImagem);

        // Obter a proporção da altura da imagem
        var proporcaoAltura = imagem.clientHeight / imagem.clientWidth;

        // Calcular a altura proporcional do vídeo
        var alturaVideo = Math.round(larguraImagem * proporcaoAltura);

        // Definir a altura do vídeo
        video.setAttribute('height', alturaVideo);

        console.log('Largura do vídeo: ' + larguraImagem + ' pixels');
        console.log('Altura do vídeo: ' + alturaVideo + ' pixels');
    }
    });

        </script>


        <script>
    function bloquearModal(event) {
        event.stopPropagation();
    }

    // Adicionando um evento de clique aos botões de adicionar e remover para chamar a função bloquearModal
    document.querySelectorAll('.btn.btn-primary.btn-sm, .btn.btn-danger').forEach(button => {
        button.addEventListener('click', bloquearModal);
    });
</script>
 